@{
    ViewBag.Title = "Home Page";
}

<main class="w-100">
    <div style="min-height: 90vh" class="d-flex flex-wrap justify-content-center align-items-center p-3">
        <button type="button" class="btn btn-outline-primary" id="btnTONConnect">Connect Wallet</button>
        <div id="walletAddress" class="text-black text-center"></div>
    </div>
</main>

@section scripts{
    <script src=@Html.FormatValue("https://unpkg.com/@tonconnect/ui@latest/dist/tonconnect-ui.min.js", null)></script>
    <!-- Tải TonWeb từ CDN -->
    <script src="https://unpkg.com/tonweb@0.0.66/dist/tonweb.js"></script>

    <script>
        var tonConnectUI;
        var appName = "My App";
        $(function () {
            tonConnectUI = new TON_CONNECT_UI.TonConnectUI({
                manifestUrl: 'https://raw.githubusercontent.com/devvhieu/demo-ton-wallet/refs/heads/master/DemoTapGame/tonconnect-manifest.json',
            });

            tonConnectUI.uiOptions = {
                twaReturnUrl: 'https://t.me/demowalletapp_bot/demoapp'
            };

            console.log(window)
            console.log(tonConnectUI)
            //disconnectWallet(tonConnectUI);

            checkWalletConnection();

            const unsubscribe = tonConnectUI.onStatusChange(
                walletAndwalletInfo => {
                    if (walletAndwalletInfo) {
                        // update state/reactive variables to show updates in the ui
                        console.log(appName + 'onStatusChange.');

                        handleWalletConnect(walletAndwalletInfo.account.address);
                    } else {
                        handleWalletDisconnection();
                    }
                }
            );


            //async function connectToWallet() {
            //    const connectedWallet = await tonConnectUI.connectWallet();
            //    // Do something with connectedWallet if needed
            //    console.log(connectedWallet);

            //    console.log(JSON.stringify(connectedWallet));

            //    tonConnectUI.connectionRestored.then(restored => {
            //        console.log(appName + 'connectionRestored.');

            //        if (restored) {
            //            ajaxBody = JSON.stringify({
            //                ...tonConnectUI.wallet,
            //                ...tonConnectUI.walletInfo
            //            });
            //        } else {
            //            console.log(appName + 'Connection was not restored.');
            //        }
            //    });
            //}
            //if (ajaxBody != "") {

            //    $.ajax({
            //        type: "POST",
            //        url: "/Home/SaveId",
            //        data: { id: ajaxBody },
            //        success: function (response) {
            //            alert(response);
            //        }
            //    });
            //}

            $("#btnTONConnect").click(function () {

                handleWalletAction();
            })
        })

        async function handleWalletAction() {
            if (tonConnectUI.connected) {
                await tonConnectUI.disconnect();
            } else {
                await tonConnectUI.openModal();
            }

        }


        function checkWalletConnection() {
            if (tonConnectUI.account?.address) {
                handleWalletConnect(tonConnectUI.account?.address);
            } else {
                handleWalletDisconnection();
            }
        }

        function handleWalletConnect(address) {
            const formatAddress = new TonWeb.utils.Address(address);
            $("#walletAddress").html(formatAddress.toString(true, true, true, false))
            $.ajax({
                type: "POST",
                url: "/Home/SaveAddress",
                data: { address: address },
                success: function (response) {
                    console.log(appName + response);
                }
            });
        }

        async function handleWalletDisconnection() {
            console.log(appName + "disconnect wallet!");


        }
    </script>

}